import TwitterAPI

########
# Authentication with twitter
####
Consumer Key (API Key)    4y80L7AkxgHOUWgmxCmtmsa5H
Consumer Secret (API Secret)    vJqX4rfOzI0xUviCzTZvacVmAjRGINdSFQlrmFuHydWdAHj29w
Access Token    751746308-MhnwFjcA1xkdgf0FTsDmbfiF0Bjv89ZEzhqrnDH6
Access Token Secret    OXm1d9oAqSuO4FEjqZR4kwOy4gJITJEWGxCsM5K6vIw1o

consumer_key = '4y80L7AkxgHOUWgmxCmtmsa5H'
consumer_secret, = 'vJqX4rfOzI0xUviCzTZvacVmAjRGINdSFQlrmFuHydWdAHj29w'
access_token_key, = '751746308-MhnwFjcA1xkdgf0FTsDmbfiF0Bjv89ZEzhqrnDH6'
access_token_secret = 'OXm1d9oAqSuO4FEjqZR4kwOy4gJITJEWGxCsM5K6vIw1o'


api = TwitterAPI(consumer_key,
                 consumer_secret,
                 access_token_key,
                 access_token_secret)

########
# Get your last 50 tweets
####
r = api.request('statuses/home_timeline', {'count':50})
for item in r.get_iterator():
    if 'text' in item:
        print item['text']

########
# Get your entire timeline
####
pager = TwitterRestPager(api, 'statuses/home_timeline', {'count':200})
for item in pager.get_iterator(wait=60):
    if 'text' in item:
        print item['text']

########
# Post a tweet
#####
r = api.request('statuses/update', {'status': 'I need pizza!'}) '{}'.format(berichtklant)
print 'SUCCESS' if r.status_code == 200 else 'FAILURE'

########
# Delete a tweet
######
r = api.request('statuses/destroy/:%d' % TWEET_ID)
print 'SUCCESS' if r.status_code == 200 else 'FAILURE'


########
# Stream tweets
######

r = api.request('statuses/filter', {'track':'pizza'})
for item in r.get_iterator():
    if 'text' in item:
        print item['text']

try:
    import json
except ImportError:
    import simplejson as json

# Import the necessary methods from "twitter" library
from twitter import Twitter, OAuth, TwitterHTTPError, TwitterStream

# Variables that contains the user credentials to access Twitter API
ACCESS_TOKEN = 'YOUR ACCESS TOKEN"'
ACCESS_SECRET = 'YOUR ACCESS TOKEN SECRET'
CONSUMER_KEY = 'YOUR API KEY'
CONSUMER_SECRET = 'ENTER YOUR API SECRET'

oauth = OAuth(ACCESS_TOKEN, ACCESS_SECRET, CONSUMER_KEY, CONSUMER_SECRET)

# Initiate the connection to Twitter Streaming API
twitter_stream = TwitterStream(auth=oauth)

# Get a sample of the public data following through Twitter
iterator = twitter_stream.statuses.sample()

# Print each tweet in the stream to the screen
# Here we set it to stop after getting 1000 tweets.
# You don't have to set it to stop, but can continue running
# the Twitter API to collect data for days or even longer.
tweet_count = 1000
for tweet in iterator:
    tweet_count -= 1
    # Twitter Python Tool wraps the data returned by Twitter
    # as a TwitterDictResponse object.
    # We convert it back to the JSON format to print/score
    print json.dumps(tweet)

    # The command below will do pretty printing for JSON data, try it out
    # print json.dumps(tweet, indent=4)

    if tweet_count <= 0:
        break 

